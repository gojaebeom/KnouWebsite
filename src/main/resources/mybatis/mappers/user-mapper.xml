<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user">	
	<!-- 회원 리스트 조회 :검색명, 검색어, 페이지 번호 -->
	<select id="selectUsers" resultType="kr.ac.knou.dto.user.User">
		SELECT ID, EMAIL, NICKNAME, CREATED_AT, IMAGE
		FROM USERS
		WHERE ${field} LIKE '${query}'
		ORDER BY NICKNAME
		LIMIT ${page}, 20;
	</select>
	
	<!-- id 에 해당하는 컬럼들 추출 (회원 상세보기, 수정페이지등에 사용)-->
	<select id="selectUserForId" resultType="kr.ac.knou.dto.user.User">
		SELECT 
			ID, 
			EMAIL, 
			NICKNAME,
			IMAGE, 
			CREATED_AT, 
			UPDATED_AT,
			ROLE
		FROM 
			USERS 
		WHERE 
			ID = #{id};
	</select>
	
	<!-- 회원가입 유효성 검사 : 이메일 -->
	<select id="selectUserIdForEmail" resultType="Integer">
		SELECT 
			ID
		FROM 
			USERS 
		WHERE 
			EMAIL = #{email};
	</select>
	
	<!-- 회원가입 유효성 검사 : 닉네임 -->
	<select id="selectUserIdForNickname" resultType="Integer">
		SELECT 
			ID
		FROM 
			USERS 
		WHERE 
			NICKNAME = #{nickname};
	</select>
	
	<!-- 이메일, 인증키가 일치하는 id 반환 -->
	<select id="selectUserCertifiedId" resultType="Integer">
		SELECT 
			ID
		FROM 
			USERS 
		WHERE 
			EMAIL = #{email}
		AND 
			AUTH_KEY = #{authKey}
	</select>
	
	<!-- 로그인 유효성 검사 : 이메일을 찾으면 위의 값들을 보내 컨트롤러에서 비밀번호가 맞으면 세션에 정보저장 -->
	<select id="selectUserForEmail" resultType="kr.ac.knou.dto.user.User">
		SELECT 
			ID,
			EMAIL,
			NICKNAME,
			PASSWORD, 
			AUTH_STATUS,
			IMAGE, 
			ROLE
		FROM 
			USERS 
		WHERE EMAIL = #{email};
	</select>
	
	<!-- 반환된 id의 authstatus 컬럼을 인증상태로 업데이트  -->
	<insert id="updateUserAuthStatus">
		UPDATE 
			USERS
		SET 
			AUTH_STATUS = 1,
			UPDATED_AT = now()
		WHERE ID = #{id};
	</insert>
	
	<!-- 회원가입 -->
	<insert id="insertUser">
		INSERT INTO 
		USERS(
			EMAIL, 
			PASSWORD, 
			NICKNAME, 
			AUTH_KEY)
		VALUES(
			#{email}, 
			#{password}, 
			#{nickname},
			#{authKey});
	</insert>
		
	<!-- id에 해당하는 컬럼들 수정 -->
	<update id="updateUser">
		UPDATE USERS
		SET
			NICKNAME = #{nickname},
			UPDATED_AT = now()
		WHERE ID = #{id};
	</update>
	
	<!-- 해당 하는 회원의 회원 이미지 업데이트 -->
	<update id="updateUserImage">
		UPDATE 
			USERS
		SET
			IMAGE = #{image},
			UPDATED_AT = now()
		WHERE 
			ID = #{id}
	</update>
</mapper>